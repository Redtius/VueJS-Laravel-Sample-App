name: Full Workflow

on:
  push:
    branches:
      - master # Workflow only executes on the master branch
    # workflow_dispatch: # allows me to run it manually

jobs:
  deploy_client:
    runs-on: ubuntu-latest # choosing the underlying OS (runner)

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2 # checkout the repository code into the runner

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '20'
    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-node-
    
    - name: Build
      shell: bash
      working-directory: ./client
      run: |
        npm install
        npm run build --if-present # Build the Vue.JS App
              
    - name: S3 Sync            
      uses: jakejarvis/s3-sync-action@v0.5.1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
        AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
        AWS_REGION: us-east-1
        SOURCE_DIR: ./client/dist
        ARGS: "--acl public-read"
  deploy_server:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ./server
        file: ./server/.docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/laravel-example:latest
    
    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.KEY_ID }}
        aws-secret-access-key: ${{ secrets.ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy to AWS CloudFormation
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: Laravel-Example
        template: ./server/cloudformation/infra.yml
        capabilities: CAPABILITY_NAMED_IAM
        parameter-overrides: "DbUser=${{ secrets.DBUSER }},DbPassword=${{ secrets.DBPASSWORD }}"
        debug: true

     - name: Delete CloudFormation stack on failure
        if: ${{ steps.deploy.outcome == 'failure' }}
        run: aws cloudformation delete-stack --stack-name Laravel-Example --region us-east-1


